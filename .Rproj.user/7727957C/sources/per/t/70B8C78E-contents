library(dplyr)
library(ggplot2)
library(shiny)
library(lubridate)
library(scales)
library(highcharter)
library(ggplot2)
library(dashboardthemes)
library(plotly)
library(shinydashboard)
library(tidyverse)
library(DT)
library(dplyr)
library(lubridate)
library(latex2exp)
options(scipen = 9999)

# import dataset-------------
covid19fix <- read.csv("data/covid19f.csv")

# mengubah tipe data---------

covid19fix[,c("Location.ISO.Code","Location")] <- lapply(covid19fix[,c("Location.ISO.Code","Location")],as.factor)

# drop kolom yang tidak digunakan-----

# dataset dipakai
Persen <- covid19fix %>%
  filter(Date == max(Date))

# Persen dalam value box output -------------------
total <- sum(Persen$Total.Cases)
PTAC <-sum(Persen$Total.Active.Cases) / total
PTD <- sum(Persen$Total.Deaths) / total
PTR <- sum(Persen$Total.Recovered) / total

persenter <- function(x){
  paste("(",round(x, 3)*100,"%)",sep = "")
}

map_indo <- read.csv("data/map-indo.csv") %>%
  left_join(Persen,by ="Provinsi") %>%
  select(woe_name, kasus = Total.Cases)

map_indoA <- read.csv("data/map-indo.csv") %>%
  left_join(Persen,by ="Provinsi") %>%
  select(woe_name, kasus = Total.Active.Cases)

map_indoR <- read.csv("data/map-indo.csv") %>%
  left_join(Persen,by ="Provinsi") %>%
  select(woe_name, kasus = Total.Recovered)

map_indoD <- read.csv("data/map-indo.csv") %>%
  left_join(Persen,by ="Provinsi") %>%
  select(woe_name, kasus = Total.Deaths)


covid19fix %>%
  filter(Date==max(Date)) %>%
  arrange(desc(Total.Cases)) %>%
  select(Provinsi, Total.Cases, Total.Recovered, Total.Deaths)

p <- covid19fix %>%
  filter(Date == max(Date))

labels <- paste0(p$Provinsi,
                 "<br> Total Cases : " , p$Total.Cases,
                 "<br> TotalDeaths : " , p$Total.Deaths,
                 "<br> Total Recovered: ",p$Total.Recovered,
                 "<br> Total Active Cases: ",p$Total.Active.Cases)
